services:
    web:
        build: ./app
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - ./app/:/app/api/
        ports:
            - 8000:8000
        env_file:
            - ./.env.dev
        depends_on:
            - db
    db:
        image: postgres:14.5
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=news_board_dev
        ports:
            - "8001:5432"
    redis:
        image: redis:alpine
    celery:
        restart: always
        build: ./app
        command: celery -A base worker -l info
        volumes:
            - ./app/:/app/api/
        env_file:
            - ./.env.dev
        depends_on:
            - web
            - redis
    celery-beat:
        restart: always
        build: ./app
        command: celery -A base beat -l info
        volumes:
            - ./app/:/app/api/
        env_file:
            - ./.env.dev
        depends_on:
            - web
            - redis
    frontend:
        restart: always
        command : npm start
        container_name: frontend
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        stdin_open: true
        depends_on:
            - web
        volumes:
            - ./frontend/node_modules:/frontend/node_modules
            - ./frontend/src:/frontend/src

volumes:
    postgres_data:
