# Python image
FROM python:3.9.6-alpine as builder

# Work directory
WORKDIR /app/api

# Environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONFAULTHANDLER 1
ENV PYTHONUNBUFFERED 1

# Install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# Lint
RUN pip install --upgrade pip
RUN pip install flake8==5.0.4
COPY . .
RUN flake8 --ignore=E501,F401,F403 .

# Install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/api/wheels -r requirements.txt


#########
# FINAL #
#########

# Pull official base image
FROM python:3.9.6-alpine

# Create directory for the app user
RUN mkdir -p /app

# Create the app user
RUN addgroup -S app && adduser -S app -G app

# Create the appropriate directories
ENV APP=/app
ENV APP_WEB=/app/web
RUN mkdir $APP_WEB
RUN mkdir $APP_WEB/staticfiles
RUN mkdir $APP_WEB/mediafiles
RUN mkdir $APP_WEB/log
WORKDIR $APP_WEB

# Install dependencies
RUN apk update && apk add libpq
COPY --from=builder /app/api/wheels /wheels
COPY --from=builder /app/api/requirements.txt .
RUN pip install --no-cache /wheels/*

# Copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_WEB/entrypoint.prod.sh
RUN chmod +x  $APP_WEB/entrypoint.prod.sh

# Copy project
COPY . $APP_WEB

# Chown all the files to the app user
RUN chown -R app:app $APP_WEB

# Change to the app user
USER app

# Run entrypoint.prod.sh
ENTRYPOINT ["/app/web/entrypoint.prod.sh"]
