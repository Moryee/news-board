services:
    web:
        build:
            context: ./app
            dockerfile: Dockerfile.prod
        command: gunicorn base.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/app/web/staticfiles
            - media_volume:/app/web/mediafiles
            - $APP/news-board-log/:/app/web/log/
        expose:
            - 8000
        env_file:
            - ./.env.prod
        depends_on:
            - db
    db:
        image: postgres:14.5
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file:
            - ./.env.prod.db
    nginx:
        build: ./nginx
        volumes:
            - static_volume:/app/web/staticfiles
            - media_volume:/app/web/mediafiles
        ports:
            - 80:80
        depends_on:
            - web
    redis:
        image: redis:alpine
    celery:
        restart: always
        build: ./app
        command: celery -A base worker -l info
        volumes:
            - ./app/:/app/api/
        env_file:
            - ./.env.prod
        depends_on:
            - web
            - redis
    frontend:
        restart: always
        command : npm start
        container_name: frontend
        build:
            context: ./app/frontend/
            dockerfile: Dockerfile
        ports:
            - "3000:3000"
        stdin_open: true
        depends_on:
            - nginx

volumes:
    postgres_data:
    static_volume:
    media_volume:
